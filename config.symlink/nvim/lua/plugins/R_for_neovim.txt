local vim = vim
return {
  "R-nvim/R.nvim",
  lazy = true,
  opts = {
    -- Create a table with the options to be passed to setup()
    R_args = { "--quiet", "--no-save" },
    hook = {
      on_filetype = function()
        -- This function will be called at the FileType event
        -- of files supported by R.nvim. This is an
        -- opportunity to create mappings local to buffers.
        vim.keymap.set("n", "<Enter>", "<Plug>RDSendLine", { buffer = true })
        vim.keymap.set("v", "<Enter>", "<Plug>RSendSelection", { buffer = true })
        vim.keymap.set("n", "<localleader>rc", "<Plug>RSendChunk", { buffer = true })
        vim.keymap.set("n", "<localleader>j", "<Plug>RPreviousRChunk", { buffer = true })
        vim.keymap.set("n", "<localleader>k", "<Plug>RNextRChunk", { buffer = true })

        -- Increase the width of which-key to handle the longer r-nvim descriptions
        local wk = require "which-key"
        -- Workaround from https://github.com/folke/which-key.nvim/issues/514#issuecomment-1987286901
        wk.register {
          ["<localleader>"] = {
            a = { name = "+(a)ll", ["ðŸš«"] = "which_key_ignore" },
            b = { name = "+(b)etween marks", ["ðŸš«"] = "which_key_ignore" },
            c = { name = "+(c)hunks", ["ðŸš«"] = "which_key_ignore" },
            f = { name = "+(f)unctions", ["ðŸš«"] = "which_key_ignore" },
            g = { name = "+(g)oto", ["ðŸš«"] = "which_key_ignore" },
            k = { name = "+(k)nit", ["ðŸš«"] = "which_key_ignore" },
            p = { name = "+(p)aragraph", ["ðŸš«"] = "which_key_ignore" },
            q = { name = "+(q)uarto", ["ðŸš«"] = "which_key_ignore" },
            r = { name = "+(r) general", ["ðŸš«"] = "which_key_ignore" },
            s = { name = "+(s)plit or (s)end", ["ðŸš«"] = "which_key_ignore" },
            t = { name = "+(t)erminal", ["ðŸš«"] = "which_key_ignore" },
            v = { name = "+(v)iew", ["ðŸš«"] = "which_key_ignore" },
          },
        }
      end,
    },
    -- pdfviewer = "",
  },
},
  {
    "nvim-treesitter/nvim-treesitter",
    run = ":TSUpdate",
    config = function()
      require("nvim-treesitter.configs").setup {
        ensure_installed = { "markdown", "markdown_inline", "r", "rnoweb" },
      }
    end,
  },
  "R-nvim/cmp-r",
  {
    "hrsh7th/nvim-cmp",
    config = function()
      require("cmp").setup { sources = { { name = "cmp_r" } } }
      require("cmp_r").setup {}
    end,
  }
